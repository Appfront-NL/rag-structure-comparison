/var/scratch/tkl206/anaconda3/envs/myenv/lib/python3.10/site-packages/transformers/utils/hub.py:105: FutureWarning: Using `TRANSFORMERS_CACHE` is deprecated and will be removed in v5 of Transformers. Use `HF_HOME` instead.
  warnings.warn(
Some weights of BertModel were not initialized from the model checkpoint at aari1995/German_Semantic_V3b and are newly initialized: ['embeddings.position_embeddings.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
The `batch_size` argument is deprecated and will be removed in the next release. Please use `encode_kwargs = {'batch_size': ...}` to set the batch size instead.
─────────────────────────────── Selected tasks  ────────────────────────────────
Retrieval
    - StatcanDialogueDatasetRetrieval, s2p, multilingual 2 / 2 Subsets


Model doesn't have encode_conversations fallback to default implementation
Batches:   0%|          | 0/17 [00:00<?, ?it/s]BertSdpaSelfAttention is used but `torch.nn.functional.scaled_dot_product_attention` does not support non-absolute `position_embedding_type` or `output_attentions=True` or `head_mask`. Falling back to the manual attention implementation, but specifying the manual implementation will be required from Transformers version v5.0.0 onwards. This warning can be removed using the argument `attn_implementation="eager"` when loading the model.
Batches:   6%|▌         | 1/17 [00:21<05:37, 21.12s/it]Batches:  18%|█▊        | 3/17 [00:28<01:54,  8.18s/it]Batches:  24%|██▎       | 4/17 [00:32<01:29,  6.91s/it]Batches:  29%|██▉       | 5/17 [00:36<01:09,  5.78s/it]Batches:  35%|███▌      | 6/17 [00:40<00:55,  5.09s/it]Batches:  41%|████      | 7/17 [00:41<00:39,  3.99s/it]Batches:  47%|████▋     | 8/17 [00:43<00:28,  3.18s/it]Batches:  53%|█████▎    | 9/17 [00:44<00:22,  2.75s/it]Batches:  59%|█████▉    | 10/17 [00:45<00:15,  2.24s/it]Batches:  65%|██████▍   | 11/17 [00:47<00:11,  1.91s/it]Batches:  71%|███████   | 12/17 [00:47<00:07,  1.55s/it]Batches:  76%|███████▋  | 13/17 [00:48<00:05,  1.26s/it]Batches:  82%|████████▏ | 14/17 [00:48<00:03,  1.05s/it]Batches:  88%|████████▊ | 15/17 [00:49<00:01,  1.07it/s]Batches:  94%|█████████▍| 16/17 [00:50<00:00,  1.23it/s]Batches: 100%|██████████| 17/17 [00:50<00:00,  1.47it/s]Batches: 100%|██████████| 17/17 [00:50<00:00,  2.97s/it]
Batches:   0%|          | 0/185 [00:00<?, ?it/s]Batches:   0%|          | 0/185 [00:06<?, ?it/s]
Error while evaluating StatcanDialogueDatasetRetrieval: CUDA out of memory. Tried to allocate 128.00 GiB. GPU 0 has a total capacity of 11.91 GiB of which 4.47 GiB is free. Including non-PyTorch memory, this process has 7.45 GiB memory in use. Of the allocated memory 7.29 GiB is allocated by PyTorch, and 36.02 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
The `batch_size` argument is deprecated and will be removed in the next release. Please use `encode_kwargs = {'batch_size': ...}` to set the batch size instead.
─────────────────────────────── Selected tasks  ────────────────────────────────
Retrieval
    - StatcanDialogueDatasetRetrieval, s2p, multilingual 2 / 2 Subsets


Model doesn't have encode_conversations fallback to default implementation
Batches:   0%|          | 0/34 [00:00<?, ?it/s]Batches:   3%|▎         | 1/34 [00:09<05:27,  9.93s/it]Batches:   9%|▉         | 3/34 [00:14<02:11,  4.26s/it]Batches:  12%|█▏        | 4/34 [00:16<01:48,  3.60s/it]Batches:  15%|█▍        | 5/34 [00:19<01:35,  3.31s/it]Batches:  18%|█▊        | 6/34 [00:21<01:21,  2.90s/it]Batches:  21%|██        | 7/34 [00:23<01:09,  2.59s/it]Batches:  24%|██▎       | 8/34 [00:25<00:58,  2.27s/it]Batches:  26%|██▋       | 9/34 [00:26<00:49,  1.98s/it]Batches:  29%|██▉       | 10/34 [00:28<00:45,  1.88s/it]Batches:  32%|███▏      | 11/34 [00:28<00:36,  1.59s/it]Batches:  35%|███▌      | 12/34 [00:29<00:29,  1.36s/it]Batches:  38%|███▊      | 13/34 [00:30<00:24,  1.17s/it]Batches:  41%|████      | 14/34 [00:31<00:20,  1.01s/it]Batches:  44%|████▍     | 15/34 [00:31<00:18,  1.05it/s]Batches:  47%|████▋     | 16/34 [00:32<00:16,  1.11it/s]Batches:  50%|█████     | 17/34 [00:33<00:13,  1.26it/s]Batches:  53%|█████▎    | 18/34 [00:33<00:11,  1.39it/s]Batches:  56%|█████▌    | 19/34 [00:34<00:09,  1.53it/s]Batches:  59%|█████▉    | 20/34 [00:34<00:08,  1.64it/s]Batches:  62%|██████▏   | 21/34 [00:35<00:07,  1.85it/s]Batches:  65%|██████▍   | 22/34 [00:35<00:05,  2.01it/s]Batches:  68%|██████▊   | 23/34 [00:35<00:04,  2.23it/s]Batches:  71%|███████   | 24/34 [00:36<00:04,  2.41it/s]Batches:  74%|███████▎  | 25/34 [00:36<00:03,  2.69it/s]Batches:  76%|███████▋  | 26/34 [00:36<00:02,  3.01it/s]Batches:  79%|███████▉  | 27/34 [00:37<00:02,  3.16it/s]Batches:  82%|████████▏ | 28/34 [00:37<00:01,  3.16it/s]Batches:  85%|████████▌ | 29/34 [00:37<00:01,  3.43it/s]Batches:  88%|████████▊ | 30/34 [00:37<00:01,  3.51it/s]Batches:  91%|█████████ | 31/34 [00:38<00:00,  3.84it/s]Batches:  94%|█████████▍| 32/34 [00:38<00:00,  4.00it/s]Batches:  97%|█████████▋| 33/34 [00:38<00:00,  4.31it/s]Batches: 100%|██████████| 34/34 [00:38<00:00,  4.68it/s]Batches: 100%|██████████| 34/34 [00:38<00:00,  1.14s/it]
Batches:   0%|          | 0/370 [00:00<?, ?it/s]Batches:   0%|          | 0/370 [00:03<?, ?it/s]
Error while evaluating StatcanDialogueDatasetRetrieval: CUDA out of memory. Tried to allocate 64.00 GiB. GPU 0 has a total capacity of 11.91 GiB of which 7.47 GiB is free. Including non-PyTorch memory, this process has 4.44 GiB memory in use. Of the allocated memory 4.29 GiB is allocated by PyTorch, and 31.52 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
The `batch_size` argument is deprecated and will be removed in the next release. Please use `encode_kwargs = {'batch_size': ...}` to set the batch size instead.
─────────────────────────────── Selected tasks  ────────────────────────────────
Retrieval
    - StatcanDialogueDatasetRetrieval, s2p, multilingual 2 / 2 Subsets


Model doesn't have encode_conversations fallback to default implementation
Batches:   0%|          | 0/68 [00:00<?, ?it/s]Batches:   1%|▏         | 1/68 [00:00<00:18,  3.72it/s]Batches:   3%|▎         | 2/68 [00:04<02:37,  2.38s/it]Batches:   4%|▍         | 3/68 [00:06<02:44,  2.54s/it]Batches:   6%|▌         | 4/68 [00:08<02:18,  2.16s/it]Batches:   7%|▋         | 5/68 [00:09<01:57,  1.87s/it]Batches:   9%|▉         | 6/68 [00:11<01:45,  1.69s/it]Batches:  10%|█         | 7/68 [00:12<01:27,  1.43s/it]Batches:  12%|█▏        | 8/68 [00:13<01:19,  1.33s/it]Batches:  13%|█▎        | 9/68 [00:14<01:14,  1.27s/it]Batches:  15%|█▍        | 10/68 [00:15<01:06,  1.15s/it]Batches:  16%|█▌        | 11/68 [00:16<01:01,  1.07s/it]Batches:  18%|█▊        | 12/68 [00:16<00:56,  1.01s/it]Batches:  19%|█▉        | 13/68 [00:17<00:50,  1.08it/s]Batches:  21%|██        | 14/68 [00:18<00:44,  1.21it/s]Batches:  22%|██▏       | 15/68 [00:18<00:40,  1.31it/s]Batches:  24%|██▎       | 16/68 [00:19<00:38,  1.35it/s]Batches:  25%|██▌       | 17/68 [00:20<00:36,  1.41it/s]Batches:  26%|██▋       | 18/68 [00:20<00:35,  1.39it/s]Batches:  28%|██▊       | 19/68 [00:21<00:30,  1.58it/s]Batches:  29%|██▉       | 20/68 [00:21<00:28,  1.66it/s]Batches:  31%|███       | 21/68 [00:22<00:25,  1.84it/s]Batches:  32%|███▏      | 22/68 [00:22<00:23,  1.94it/s]Batches:  34%|███▍      | 23/68 [00:23<00:21,  2.08it/s]Batches:  35%|███▌      | 24/68 [00:23<00:19,  2.27it/s]Batches:  37%|███▋      | 25/68 [00:23<00:17,  2.40it/s]Batches:  38%|███▊      | 26/68 [00:24<00:16,  2.49it/s]Batches:  40%|███▉      | 27/68 [00:24<00:15,  2.57it/s]Batches:  41%|████      | 28/68 [00:24<00:15,  2.57it/s]Batches:  43%|████▎     | 29/68 [00:25<00:13,  2.79it/s]Batches:  44%|████▍     | 30/68 [00:25<00:13,  2.81it/s]Batches:  46%|████▌     | 31/68 [00:25<00:12,  2.97it/s]Batches:  47%|████▋     | 32/68 [00:26<00:11,  3.18it/s]Batches:  49%|████▊     | 33/68 [00:26<00:10,  3.25it/s]Batches:  50%|█████     | 34/68 [00:26<00:10,  3.37it/s]Batches:  51%|█████▏    | 35/68 [00:26<00:08,  3.67it/s]Batches:  53%|█████▎    | 36/68 [00:27<00:08,  3.85it/s]Batches:  54%|█████▍    | 37/68 [00:27<00:07,  3.88it/s]Batches:  56%|█████▌    | 38/68 [00:27<00:07,  3.87it/s]Batches:  57%|█████▋    | 39/68 [00:27<00:07,  4.01it/s]Batches:  59%|█████▉    | 40/68 [00:28<00:06,  4.28it/s]Batches:  60%|██████    | 41/68 [00:28<00:05,  4.51it/s]Batches:  62%|██████▏   | 42/68 [00:28<00:05,  4.75it/s]Batches:  63%|██████▎   | 43/68 [00:28<00:05,  4.84it/s]Batches:  65%|██████▍   | 44/68 [00:28<00:04,  5.06it/s]Batches:  66%|██████▌   | 45/68 [00:29<00:04,  5.16it/s]Batches:  68%|██████▊   | 46/68 [00:29<00:04,  5.29it/s]Batches:  69%|██████▉   | 47/68 [00:29<00:03,  5.71it/s]Batches:  71%|███████   | 48/68 [00:29<00:03,  6.06it/s]Batches:  72%|███████▏  | 49/68 [00:29<00:02,  6.38it/s]Batches:  74%|███████▎  | 50/68 [00:29<00:02,  6.61it/s]Batches:  75%|███████▌  | 51/68 [00:29<00:02,  6.78it/s]Batches:  76%|███████▋  | 52/68 [00:30<00:02,  6.93it/s]Batches:  78%|███████▊  | 53/68 [00:30<00:02,  6.97it/s]Batches:  79%|███████▉  | 54/68 [00:30<00:02,  6.51it/s]Batches:  81%|████████  | 55/68 [00:30<00:01,  6.72it/s]Batches:  82%|████████▏ | 56/68 [00:30<00:01,  7.12it/s]Batches:  84%|████████▍ | 57/68 [00:30<00:01,  7.45it/s]Batches:  85%|████████▌ | 58/68 [00:30<00:01,  7.70it/s]Batches:  87%|████████▋ | 59/68 [00:31<00:01,  7.50it/s]Batches:  88%|████████▊ | 60/68 [00:31<00:01,  7.85it/s]Batches:  90%|████████▉ | 61/68 [00:31<00:00,  8.11it/s]Batches:  91%|█████████ | 62/68 [00:31<00:00,  8.33it/s]Batches:  93%|█████████▎| 63/68 [00:31<00:00,  8.76it/s]Batches:  94%|█████████▍| 64/68 [00:31<00:00,  9.07it/s]Batches:  97%|█████████▋| 66/68 [00:31<00:00,  9.68it/s]Batches: 100%|██████████| 68/68 [00:31<00:00, 11.01it/s]Batches: 100%|██████████| 68/68 [00:31<00:00,  2.13it/s]
Batches:   0%|          | 0/739 [00:00<?, ?it/s]Batches:   0%|          | 0/739 [00:02<?, ?it/s]
Error while evaluating StatcanDialogueDatasetRetrieval: CUDA out of memory. Tried to allocate 32.00 GiB. GPU 0 has a total capacity of 11.91 GiB of which 8.98 GiB is free. Including non-PyTorch memory, this process has 2.93 GiB memory in use. Of the allocated memory 2.79 GiB is allocated by PyTorch, and 27.27 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
